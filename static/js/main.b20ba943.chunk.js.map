{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","todoElement","getUser","userId","usersFromServer","find","App","useState","setTitle","titleError","setTitleError","setUserId","userError","setUserError","maxId","Math","max","action","method","onSubmit","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","replace","disabled","onClick","newTodo","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b20ba943.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <>\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todoElement => (\n      <TodoInfo\n        todo={todoElement}\n        key={todoElement.id}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  const addTodo = () => {\n    const newTodo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (newTodo && title && userId) {\n      return todos.push(newTodo);\n    }\n\n    return todos;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value.replace(\n                  /[^\\w\\s\\p{Script=Cyrillic}]/gui, '',\n                ));\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(+event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}